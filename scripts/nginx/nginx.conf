# Config is the default provided in the Debian Nginx 1.10.1 package--as used by
# the official Nginx Docker images. Adjustments made to log to stdout/stderr
# and prefix log messages with 'nginx: '.
# https://github.com/nginxinc/docker-nginx/blob/1.10.1/stable/alpine/nginx.conf

user  nginx;
worker_processes  1;

error_log  /dev/stderr warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Use a JSON-compatible log format. The default Nginx log format has
    # unlabeled fields that makes it tricky to parse. Since Nginx 1.11.8,
    # `escape=json` is available to escape variables.
    log_format main escape=json
        '{ '
            '"time": "$time_iso8601", '
            '"remote_addr": "$remote_addr", '
            '"remote_user": "$remote_user", '
            '"request": "$request", '
            '"status": $status, '
            '"body_bytes_sent": $body_bytes_sent, '
            '"request_time": $request_time, '
            '"http_host": "$http_host", '
            '"http_referer": "$http_referer", '
            '"http_user_agent": "$http_user_agent", '
            '"http_via": "$http_via", '
            '"http_x_forwarded_proto": "$http_x_forwarded_proto", '
            '"http_x_forwarded_for": "$http_x_forwarded_for" '
        '}';

    access_log  /dev/stdout  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip              on;
    gzip_disable      "msie6";
    # Allow gzip responses for proxied requests. Our load-balancers don't set
    # this header, but some other things do. We can reasonably trust any vaguely
    # modern proxy to handle gzip correctly, and change this if not.
    gzip_proxied      any;
    # Don't gzip tiny requests-- anything smaller than this should roughly fit
    # inside the MTU.
    gzip_min_length   1024;
    # Pick a balance of compression vs CPU time. 6 is the default for the gzip
    # library and leans slightly more towards better compression.
    gzip_comp_level   6;
    # Include 'Accept-Encoding' in the 'Vary' header so downstream caches work
    gzip_vary         on;

    # Roughly based on https://www.fastly.com/blog/new-gzip-settings-and-deciding-what-compress
    # ...with a few adjustments because we control what content-types we send
    gzip_types
        # Applications
        application/javascript
        application/json
        application/xml

        # Fonts (WOFF already compressed)
        application/vnd.ms-fontobject
        # No .otf/.ttf in default Nginx mimetype mapping

        # Images (most already compressed)
        image/svg+xml
        image/x-icon # 'x-icon' seems to be used more commonly than 'vnd.microsoft.icon'

        # Text types
        # text/html is compressed by default:
        # https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_types
        text/css
        text/plain;

    include /etc/nginx/conf.d/*.conf;
}
