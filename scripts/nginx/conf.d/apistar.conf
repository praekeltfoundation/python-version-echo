upstream gunicorn {
    # Proxy to Gunicorn socket and always retry, as recommended by deployment
    # guide: http://docs.gunicorn.org/en/stable/deploy.html
    server unix:/var/run/gunicorn/gunicorn.sock max_fails=0;
}

# Detect filenames for static files that look like they contain MD5 hashes as
# these can be cached indefinitely.

# Nginx's 'expires max' directive sets the Cache-Control header to have a max-
# age of 10 years. It also sets the Expires header to a certain date in 2037:
# http://nginx.org/en/docs/http/ngx_http_headers_module.html#expires

# We also want to add the 'public' and 'immutable' values to the Cache-Control
# header to prevent clients from revalidating files that we know are immutable:
# https://bitsup.blogspot.co.za/2016/05/cache-control-immutable.html

# Using 'expires max' makes adding other Cache-Control values tricky and the
# The Expires header should be ignored when a max-age is set for Cache-Control:
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Expires

# So, avoid 'expires max' & just add the header manually with a 10-year max-age.
map $uri $static_cache_control {
    # ManifestStaticFilesStorage files have a hash in the middle of the filename
    "~^/static/.*/[^/\.]+\.[a-f0-9]{12}\.\w+$"         "max-age=315360000, public, immutable";

    # For the default, copy what WhiteNoise does and set a short max-age
    default                                            "max-age=60, public";
}

server {
    listen 8000;

    root /app;

    location ~ ^/static/?(.*)$ {
        # Fallback for projects still using STATIC_ROOT = BASE_DIR/staticfiles
        # as recommended by WhiteNoise
        try_files /static/$1 /staticfiles/$1 =404;
        add_header Cache-Control $static_cache_control;
    }

    location ~ ^/media/?(.*)$ {
        # Fallback for projects still using MEDIA_ROOT = BASE_DIR/mediafiles
        try_files /media/$1 /mediafiles/$1 =404;
    }

    location / {
        client_max_body_size 20m;
        proxy_pass http://gunicorn;

        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # We only use the 'X-Forwarded-Proto' header from our load-balancer to
        # indicate the original connection used HTTPS, but Gunicorn by default
        # accepts more headers than that:
        # http://docs.gunicorn.org/en/19.7.1/settings.html#secure-scheme-headers
        # Overriding that config in Gunicorn is a bit complicated, and could
        # easily be overriden by accident by the user, so just delete those
        # other headers here so that a client can't set them
        # incorrectly/maliciously.
        proxy_set_header X-Forwarded-Protocol "";
        proxy_set_header X-Forwarded-Ssl "";
    }
}
